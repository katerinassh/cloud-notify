version: '3.7'

networks:
  app-network:
    driver: bridge

services:
  db:
    image: postgres:14.1-alpine
    container_name: cloud-notify-postgres
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: >
        psql postgresql://$${POSTGRES_USER}:$${POSTGRES_PASSWORD}@db/$${POSTGRES_DB} \
          --tuples-only \
          --command "select 'postgres is up';" \
        || exit 1
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - ./scripts/seed-test-data.sql:/docker-entrypoint-initdb.d/11-init.sql
    ports:
      - "5432:5432"
    networks:
      - app-network

  app:
    build:
      context: .
    image: cloud-notify-image
    container_name: cloud-notify-app
    ports:
      - "27017:3000"
    depends_on:
      - db
    links:
      - db
    env_file:
      - .env
    restart: on-failure
    environment:
      - APP_PORT=${APP_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    command: npm start
    networks:
      - app-network

